[case testKeyRequiredFalseCouldBeAbsent]
from key_based_typeddict.core import KeyBasedTypedDict, Key

MyTypedDict2 = KeyBasedTypedDict('MyTypedDict2', {
    'name': str,
    Key('profile', required=False): str
})

def func(mydict: MyTypedDict2):
    pass

func({'name': 'hello'})
[out]


[case testKeyRequiredTrueByDefault]
from key_based_typeddict.core import KeyBasedTypedDict, Key

MyTypedDict2 = KeyBasedTypedDict('MyTypedDict2', {
    'name': str,
    Key('profile'): str
})

def func(mydict: MyTypedDict2):
    pass

func({'name': 'hello'})
[out]


[case testExtraKeysAreAllowed]
from key_based_typeddict.core import KeyBasedTypedDict, Key

MyTypedDict2 = KeyBasedTypedDict('MyTypedDict2', {
    'name': str
}, allow_extra=True)

def func(mydict: MyTypedDict2):
    pass

func({'name': 'hello', 'extra': True})
[out]